backend = "glx";
vsync = true;
glx-use-copysubbuffer-mesa = true;
xrender-sync = true;
xrender-sync-fence = true;

transition-length = 300
transition-pow-x = 0.3
transition-pow-y = 0.3
transition-pow-w = 0.3
transition-pow-h = 0.3
size-transition = true

# corners
rounded-corners = false;
corner-radius = 0;

# Exclude specific windows from rounded corners (optional)
rounded-corners-exclude = [
  "class_g = 'i3-frame'",
  "class_g = 'rofi'",
 "name = 'Notification'",
  "window_type = 'dock'",
  "window_type = 'desktop'"
];

detect-rounded-corners = false;

# Blur
blur-method = "dual_kawase";
blur-size = 15;
blur-strength = 9;
blur-background = true;
blur-background-frame = false;
blur-kern = "3x3box";
blur-background-exclude = [
  "window_type = 'Polybar'",
  "window_type = 'desktop'",
  "window_type = 'dock'",
  "role = 'xborder'",
  "class_g = 'Conky'",
  "name = 'Notification'",
  "_GTK_FRAME_EXTENTS"
];

# Enable shadows
shadow = true;
shadow-radius = 12;
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-opacity = 0.7;
shadow-color = "#000000";

# Opacity
inactive-opacity = 0.95;
active-opacity = 0.95;
inactive-dim = 0.0

opacity-rule = [
    "100:class_g = 'firefox'",
    "100:class_g = 'discord'",
    "75:class_g =  'kitty'",
    "100:class_g =  'spotify-launcher'"
];

# Fading
fading = true;
fade-in-step = 0.05;  # Slightly slower, for a smoother fade-in
fade-out-step = 0.05;  # Slightly slower fade-out as well, for consistency
fade-delta = 10;  # Remains the same, fine-tunes the fade delta
fade-time = 300;  # Increase fade-time to 300ms for a more gradual fade-in
fade-duration = 400;  # Slightly longer fade-duration for a smoother transition
frame-opacity = 1.0;

# Animations
animations = (
  {
    triggers = ["close", "hide"];
    opacity = {
      curve = "linear";
      duration = 0.1;
      start = "window-raw-opacity-before";
      end = 0;
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
  },
  {
    triggers = ["open", "show"];
    opacity = {
      curve = "cubic-bezier(0,1,1,1)";
      duration = 0.3;
      start = 0;
      end = "window-raw-opacity";
    };
    blur-opacity = "opacity";
    shadow-opacity = "opacity";
    offset-x = "(1 - scale-x) / 2 * window-width";
    offset-y = "(1 - scale-y) / 2 * window-height";
    scale-x = {
      curve = "cubic-bezier(0,1.3,1,1)";
      duration = 0.3;
      start = 0.6;
      end = 1;
    };
    scale-y = "scale-x";
    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(0,0,0,1.28)";
      duration = 0.22;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)
